{
  "service": {
    "version": "1.0.0.0",
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "Dev Demo Tomcat on IBM Single VM",
      "description": "",
      "image": "serviceicon_1.svg",
      "category": "Virtual Machine",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": false,
      "updatable": "",
      "systemTags": true
    },
    "tags": [
      {
        "name": "environment",
        "label": "Environment",
        "type": "string",
        "immutable": false,
        "hidden": false,
        "required": true,
        "secured": false,
        "description": "Unique identifer added to the provisioned VMs.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Write",
        "options": [
          {
            "label": "Development",
            "value": "dev",
            "default": true
          },
          {
            "label": "Quality Assurance",
            "value": "qa",
            "default": false
          },
          {
            "label": "Production",
            "value": "prod",
            "default": false
          },
          {
            "label": "Test",
            "value": "test",
            "default": false
          }
        ]
      },
      {
        "name": "Name",
        "label": "Name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.group}"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.owner}"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.service_instance_id}"
      }
    ],
    "upgrade_from": [],
    "downgrade_to": [],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "vmname",
            "label": "VM Name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "demovm"
          },
          {
            "name": "domain",
            "label": "VM Domain",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Domain of the virtual instance to be deployed",
            "view": "create new",
            "editable": true,
            "default": "sample.com"
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Demo SingleVM IBM Cloud": {
                "title": "Demo SingleVM IBM Cloud_3a375d",
                "template_name": "Demo SingleVM IBM Cloud",
                "version": "master",
                "id": "demosing25dc4169",
                "template_type": "Terraform",
                "template_content_type": "IBM",
                "template_provider": "IBM",
                "instance_name": "",
                "template_data_objects": {},
                "template_params": {
                  "datacenter": "dal09",
                  "hostname": "${input_parameters.vmname}",
                  "domain": "${input_parameters.domain}"
                },
                "outputs": [
                  "vm_ip",
                  "vm_public",
                  "vm_private",
                  "vm_public_urlenc",
                  "vm_private_urlenc"
                ],
                "editable": true,
                "cloud_connection_names": [
                  {
                    "provider": "IBM",
                    "connection_name": "IBM"
                  }
                ],
                "provider_engine_version": "0.11.11",
                "isErrorFlow": false,
                "cloud_connection_name": "IBM"
              }
            },
            {
              "Inventory": {
                "title": "Inventory",
                "template_name": "Inventory",
                "version": "1.0",
                "id": "inventor86d3e6ea",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "organizationName": "Default",
                  "inventoryName": "test1",
                  "extraVars": {},
                  "hostgroup": {
                    "None": "${templates.demosing25dc4169.output.vm_ip}",
                    "tomcat-servers": "${templates.demosing25dc4169.output.vm_ip}"
                  }
                },
                "outputs": [
                  "inventory_name"
                ],
                "editable": true,
                "provider_engine_version": "1.0",
                "isErrorFlow": false
              }
            },
            {
              "Credential": {
                "title": "Credential",
                "template_name": "Credential",
                "version": "1.0",
                "id": "credentie32da59b",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "credential_name_suffix": "${templates.demosing25dc4169.hostname}",
                  "user_name": "root",
                  "ssh_private_key": "${templates.demosing25dc4169.output.vm_private}",
                  "password": ""
                },
                "outputs": [
                  "credential_name"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            },
            {
              "TomcatNKD": {
                "title": "Tomcat",
                "template_name": "TomcatNKD",
                "version": "1.0",
                "id": "tomcatnk4c1271f8",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${templates.inventor86d3e6ea.output.inventory_name}",
                  "credential_name": "${templates.credentie32da59b.output.credential_name}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [
            {
              "emailnotification": {
                "title": "email start",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnot4208e496",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Your order ${svc_instance.name} is being provisioned",
                "body": "The VM for your order ${svc_instance.name} is being provisioned.",
                "editable": true,
                "isErrorFlow": false
              }
            },
            {
              "emailnotification": {
                "title": "email vm",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnot08a6e5f0",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Your Order ${templates.demosing25dc4169.instance_name} - VM Ready",
                "body": "The VM for your order ${templates.demosing25dc4169.instance_name} has been provisioned. \n\nIt can be reached at ${templates.demosing25dc4169.output.ip_address}\n\nThe SSH Key is: \n${templates.demosing25dc4169.output.vm_private}",
                "editable": true,
                "isErrorFlow": false
              }
            },
            {
              "emailnotification": {
                "title": "email complete",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnot205f40bc",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Your Order ${templates.demosing25dc4169.instance_name} is ready",
                "body": "Your Order ${templates.demosing25dc4169.instance_name} has been completed.\n\nYour Tomcat instance can be reached at \n\nhttp://${templates.demosing25dc4169.output.ip_address}:8080",
                "editable": true
              }
            },
            {
              "emailnotification": {
                "title": "email fail",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnot670a3b33",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "The deployment of your offering ${svc_instance.name} has failed",
                "body": "The deployment of your offering has failed ${svc_instance.name}",
                "editable": true
              }
            }
          ],
          "sequence": {
            "0": "emailnot4208e496",
            "1": "demosing25dc4169",
            "2": "emailnot08a6e5f0",
            "3": "inventor86d3e6ea",
            "4": "credentie32da59b",
            "5": "tomcatnk4c1271f8",
            "6": "emailnot205f40bc"
          },
          "error_sequence": {
            "0": "emailnot670a3b33"
          }
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}