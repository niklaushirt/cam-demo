{
  "service": {
    "version": "1.0.0.0",
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "Dev Demo Tomcat on AWS Single VM",
      "description": "",
      "image": "serviceicon_1.svg",
      "category": "CloudServices",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": false,
      "updatable": "",
      "systemTags": true
    },
    "tags": [
      {
        "name": "environment",
        "label": "Environment",
        "type": "string",
        "immutable": false,
        "hidden": false,
        "required": true,
        "secured": false,
        "description": "Unique identifer added to the provisioned VMs.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Write",
        "options": [
          {
            "label": "Development",
            "value": "dev",
            "default": true
          },
          {
            "label": "Quality Assurance",
            "value": "qa",
            "default": false
          },
          {
            "label": "Production",
            "value": "prod",
            "default": false
          },
          {
            "label": "Test",
            "value": "test",
            "default": false
          }
        ]
      },
      {
        "name": "Name",
        "label": "Name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.group}"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.owner}"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.service_instance_id}"
      }
    ],
    "upgrade_from": [],
    "downgrade_to": [],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Demo SingleVM AWS EC2": {
                "title": "Demo SingleVM AWS EC2_eef336",
                "template_name": "Demo SingleVM AWS EC2",
                "version": "master",
                "id": "demosinga0874f5b",
                "template_type": "Terraform",
                "template_content_type": "Amazon EC2",
                "template_provider": "Amazon EC2",
                "instance_name": "",
                "template_data_objects": {},
                "template_params": {
                  "aws_region": "eu-central-1",
                  "aws_image": "centos",
                  "aws_image_size": "t2.small",
                  "aws_ami_owner_id": "582147391765",
                  "vpc_name_tag": "myvpc",
                  "subnet_name": "mysubnet"
                },
                "outputs": [
                  "ip_address",
                  "vm_public",
                  "vm_private"
                ],
                "editable": true,
                "cloud_connection_names": [
                  {
                    "provider": "Amazon EC2",
                    "connection_name": "EC2"
                  }
                ],
                "provider_engine_version": "0.11.11",
                "isErrorFlow": false,
                "cloud_connection_name": "EC2"
              }
            },
            {
              "Inventory": {
                "title": "Inventory",
                "template_name": "Inventory",
                "version": "1.0",
                "id": "inventor6bcfe2cf",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "organizationName": "Default",
                  "inventoryName": "",
                  "extraVars": {},
                  "hostgroup": {
                    "tomcat-servers": "${templates.demosinga0874f5b.output.ip_address}"
                  }
                },
                "outputs": [
                  "inventory_name"
                ],
                "editable": true,
                "provider_engine_version": "1.0",
                "isErrorFlow": false
              }
            },
            {
              "Credential": {
                "title": "Credential",
                "template_name": "Credential",
                "version": "1.0",
                "id": "credenti0a163b27",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "credential_name_suffix": "",
                  "user_name": "root",
                  "ssh_private_key": "${templates.demosinga0874f5b.output.vm_private}",
                  "password": ""
                },
                "outputs": [
                  "credential_name"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            },
            {
              "TomcatCentos": {
                "title": "TomcatCentos",
                "template_name": "TomcatCentos",
                "version": "1.0",
                "id": "tomcatce98eb7e34",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${templates.inventor6bcfe2cf.output.inventory_name}",
                  "credential_name": "${templates.credenti0a163b27.output.credential_name}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [
            {
              "emailnotification": {
                "title": "EMail Start",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnotaea0758c",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Your Order is being provisioned",
                "body": "The VM for your order is being provisioned. \\n",
                "editable": true
              }
            },
            {
              "emailnotification": {
                "title": "EMail VM",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnota1ae7ee8",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Your Order ${templates.demosinga0874f5b.instance_name} - VM Ready",
                "body": "The VM for your order ${templates.demosinga0874f5b.instance_name} has been provisioned. \n\nIt can be reached at ${templates.demosinga0874f5b.output.ip_address}\n\nThe SSH Key is: \n${templates.demosinga0874f5b.output.vm_private}",
                "editable": true
              }
            },
            {
              "emailnotification": {
                "title": "EMail",
                "type": "email",
                "receiverList": "niklaushirt@gmail.com",
                "id": "emailnot216c7c2c",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Your Order ${templates.demosinga0874f5b.instance_name} is ready",
                "body": "Your Order ${templates.demosinga0874f5b.instance_name} has been completed.\n\nYour Tomcat instance can be reached at \n\nhttp://${templates.demosinga0874f5b.output.ip_address}:8080",
                "editable": true
              }
            }
          ],
          "sequence": {
            "0": "emailnotaea0758c",
            "1": "demosinga0874f5b",
            "2": "emailnota1ae7ee8",
            "3": "inventor6bcfe2cf",
            "4": "credenti0a163b27",
            "5": "tomcatce98eb7e34",
            "6": "emailnot216c7c2c"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}