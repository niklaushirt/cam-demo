{
  "service": {
    "version": "1.0.0.0",
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "Dev Demo Tomcat on AWS Single VM",
      "description": "",
      "image": "serviceicon_1.svg",
      "category": "Virtual Machine",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": false,
      "updatable": "",
      "systemTags": true
    },
    "tags": [
      {
        "name": "environment",
        "label": "Environment",
        "type": "string",
        "immutable": false,
        "hidden": false,
        "required": true,
        "secured": false,
        "description": "Unique identifer added to the provisioned VMs.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Write",
        "options": [
          {
            "label": "Development",
            "value": "dev",
            "default": true
          },
          {
            "label": "Quality Assurance",
            "value": "qa",
            "default": false
          },
          {
            "label": "Production",
            "value": "prod",
            "default": false
          },
          {
            "label": "Test",
            "value": "test",
            "default": false
          }
        ]
      },
      {
        "name": "Name",
        "label": "Name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.group}"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.owner}"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.service_instance_id}"
      }
    ],
    "upgrade_from": [],
    "downgrade_to": [],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "vmname",
            "label": "VM Name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "demovm"
          },
          {
            "name": "domain",
            "label": "VM Domain",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Domain of the virtual instance to be deployed",
            "view": "create new",
            "editable": true,
            "default": "sample.com"
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Demo SingleVM AWS EC2": {
                "title": "Demo SingleVM AWS EC2_a9fcda",
                "template_name": "Demo SingleVM AWS EC2",
                "version": "master",
                "id": "demosing7f896772",
                "template_type": "Terraform",
                "template_content_type": "Amazon EC2",
                "template_provider": "Amazon EC2",
                "instance_name": "",
                "template_data_objects": {},
                "template_params": {
                  "aws_region": "eu-central-1",
                  "aws_image": "centos7",
                  "aws_image_size": "t2.small",
                  "aws_ami_owner_id": "582147391765",
                  "vpc_name_tag": "myopic",
                  "subnet_name": "mysubnet"
                },
                "outputs": [
                  "ip_address",
                  "vm_public",
                  "vm_private"
                ],
                "editable": true,
                "cloud_connection_names": [
                  {
                    "provider": "Amazon EC2",
                    "connection_name": "EC2"
                  }
                ],
                "cloud_connection_name": "EC2",
                "provider_engine_version": "0.11.11",
                "isErrorFlow": false
              }
            },
            {
              "Inventory": {
                "title": "Inventory",
                "template_name": "Inventory",
                "version": "1.0",
                "id": "inventor86d3e6ea",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "organizationName": "Default",
                  "inventoryName": "test1",
                  "extraVars": {},
                  "hostgroup": {
                    "None": "${templates.demovirt878f2a41.output.vm_ip}",
                    "tomcat-servers": "${templates.demosing7f896772.output.ip_address}"
                  }
                },
                "outputs": [
                  "inventory_name"
                ],
                "editable": true,
                "provider_engine_version": "1.0",
                "isErrorFlow": false
              }
            },
            {
              "Credential": {
                "title": "Credential",
                "template_name": "Credential",
                "version": "1.0",
                "id": "credentie32da59b",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "credential_name_suffix": "${templates.demosing7f896772.hostname}",
                  "user_name": "root",
                  "ssh_private_key": "${templates.demosing7f896772.output.vm_private}",
                  "password": ""
                },
                "outputs": [
                  "credential_name"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            },
            {
              "TomcatNKD": {
                "title": "Tomcat",
                "template_name": "TomcatNKD",
                "version": "1.0",
                "id": "tomcatnk4c1271f8",
                "template_type": "ANSIBLE",
                "template_content_type": "ANSIBLE",
                "template_provider": "ANSIBLE",
                "instance_name": "",
                "cloud_connection_name": "AnsibleTower",
                "template_data_objects": {},
                "template_params": {
                  "inventory_name": "${templates.inventor86d3e6ea.output.inventory_name}",
                  "credential_name": "${templates.credentie32da59b.output.credential_name}",
                  "extra_variables": {}
                },
                "outputs": [
                  "job_status"
                ],
                "editable": true,
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [
            {
              "resthook": {
                "title": "Slack VM",
                "id": "resthookc7562138",
                "headers": {
                  "accept": "application/json",
                  "Content-Type": "application/json"
                },
                "editable": true,
                "on_destroy": {
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "payload": {
                    "blocks": [
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": ":white_check_mark: *Your Workload Order has been processed*"
                        }
                      },
                      {
                        "type": "section",
                        "block_id": "section567",
                        "text": {
                          "type": "mrkdwn",
                          "text": "\n :rocket: You can get more details <https://ansible-tower-web-svc-ansible-tower.ansibletower-a376efc1170b9b8ace6422196c51e491-0000.eu-de.containers.appdomain.cloud/#/jobs|here>  \n\n\n Thank you for using our service."
                        },
                        "accessory": {
                          "type": "image",
                          "image_url": "https://raw.githubusercontent.com/niklaushirt/ansible-demo/master/icp4multicloud-management.png",
                          "alt_text": "Haunted hotel image"
                        }
                      }
                    ]
                  }
                },
                "url": "https://hooks.slack.com/services/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",
                "method": "POST",
                "payload": {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": ":white_check_mark: *Your VM Order has been processed* "
                      }
                    },
                    {
                      "type": "section",
                      "block_id": "section567",
                      "text": {
                        "type": "mrkdwn",
                        "text": "\n :rocket: Your VM is available at: ${templates.demosing7f896772.output.vm_ip}  \n\n\n  Thank you for using our service."
                      },
                      "accessory": {
                        "type": "image",
                        "image_url": "https://raw.githubusercontent.com/niklaushirt/ansible-demo/master/icp4multicloud-management.png",
                        "alt_text": "Haunted hotel image"
                      }
                    }
                  ]
                },
                "isErrorFlow": false
              }
            },
            {
              "resthook": {
                "title": "Slack Tomcat",
                "id": "resthookbe4dff39",
                "headers": {
                  "accept": "application/json",
                  "Content-Type": "application/json"
                },
                "editable": true,
                "on_destroy": {
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "payload": {
                    "blocks": [
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": ":white_check_mark: *Your Workload Order has been processed*"
                        }
                      },
                      {
                        "type": "section",
                        "block_id": "section567",
                        "text": {
                          "type": "mrkdwn",
                          "text": "\n :rocket: You can get more details <https://ansible-tower-web-svc-ansible-tower.ansibletower-a376efc1170b9b8ace6422196c51e491-0000.eu-de.containers.appdomain.cloud/#/jobs|here>  \n\n\n Thank you for using our service."
                        },
                        "accessory": {
                          "type": "image",
                          "image_url": "https://raw.githubusercontent.com/niklaushirt/ansible-demo/master/icp4multicloud-management.png",
                          "alt_text": "Haunted hotel image"
                        }
                      }
                    ]
                  }
                },
                "url": "https://hooks.slack.com/services/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",
                "method": "POST",
                "payload": {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": ":white_check_mark: *Your Workload Order has been processed* "
                      }
                    },
                    {
                      "type": "section",
                      "block_id": "section567",
                      "text": {
                        "type": "mrkdwn",
                        "text": "\n :rocket: Access it <http://${templates.demosing7f896772.output.vm_ip}:8080|here>  \n\n\n Thank you for using our service."
                      },
                      "accessory": {
                        "type": "image",
                        "image_url": "https://raw.githubusercontent.com/niklaushirt/ansible-demo/master/icp4multicloud-management.png",
                        "alt_text": "Haunted hotel image"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "notifications": [],
          "sequence": {
            "0": "demosing7f896772",
            "1": "resthookc7562138",
            "2": "inventor86d3e6ea",
            "3": "credentie32da59b",
            "4": "tomcatnk4c1271f8",
            "5": "resthookbe4dff39"
          },
          "error_sequence": {}
        },
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}